THIS_FILE := $(lastword $(MAKEFILE_LIST))
BDEST := ctw
DIST := ./dist/
BIN := ./build/
BSPEC := ./ctw.spec
BFLAGS := \
	--clean \
	--noconfirm \
	--onefile \
	--windowed \
	--name $(BDEST) \
	--distpath $(DIST) \
	--workpath $(BIN)

VENV := ./venv
PYTHON := $(VENV)/bin/python
MAIN := ./src/main.py

.PHONY: clean generate run build exec requirements init format all
default: all

# initilizes enviornment and downloads pip modules
init:
	# refrences global python3.X installation
	python3 -m venv $(VENV); \
	source "$(VENV)/bin/activate"; \
	$(VENV)/bin/pip install --upgrade pip; \
	$(VENV)/bin/pip install -r requirements.txt;

# removes files and dirs generated by build
clean:
	rm -rf $(BIN) \
	rm -rf $(DIST)

# freezes and packages app
build:
	source "$(VENV)/bin/activate"; \
	pyinstaller $(BFLAGS) $(BSPEC)

# executes packacged app
exec:
	$(DIST)/$(BDEST)

# runs interactive app
run:
	source "$(VENV)/bin/activate"; \
	$(PYTHON) $(MAIN)

# rebuild pip requirements
requirements:
	source "$(VENV)/bin/activate"; \
	pip freeze > requirements.txt

# formats python source code
format:
	source "$(VENV)/bin/activate"; \
	autopep8 --in-place --recursive --aggressive ./src/*

# does it all baby
all:
	@$(MAKE) -f $(THIS_FILE) clean format requirements build exec
